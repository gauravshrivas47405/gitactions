name: Cherry-pick PR for Release Branch
on:
  push:
    branches: ['release/**']
jobs:
  action-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Check merge conflicts
        run : |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin 
          git merge --no-commit origin/main
          if [ $? -ne 0 ]; then
              echo there are conflicts
          fi
      
      - name: Run the Action
        if: startsWith(github.ref, 'refs/heads/release')
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ github.event.commits[0].message }}
          assignee: ${{ github.actor }}
          label: automatic,release
          # template: .github/PULL_REQUEST_TEMPLATE/FEATURE.md
          new_string: ${{ github.event.commits[0].message }}
          get_diff: true
          target_branch : 'main'
          source_branch : ${{ github.head_ref || github.ref_name }} 

      - name: Merge Conflict finder
        uses: olivernybroe/action-conflict-finder@v2.0
     
      
      # - uses: actions/checkout@v3
      # - name: List files with merge conflict markers
      #   run: git --no-pager grep "<<<<<<<" ":(exclude).github/" || true
      # - name: Fail or succeed job if any files with merge conflict markers have been checked in
      #   # Find lines containing "<<<<<<<", then count the number of lines.
      #   # 0 matching lines results in exit code 0, i.e. success.
      #   run: exit $(git grep "<<<<<<<" ":(exclude).github/" | wc --lines)