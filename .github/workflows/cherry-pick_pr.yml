name: Cherry-pick PR for Release Branch
on:
  push:
    branches: ['release/**']
jobs:
  Cherry-pick_PR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Check merge conflicts
        id: has-conflicts
        # continue-on-error: true
        run : |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull --no-commit --no-ff origin main
          # echo "Conflict found and exit" && exit 1

      - run: |
          echo "${{steps.has-conflicts.conclusion }}"
          echo "${{steps.has-conflicts }}"

      - name : Notify to the user if conflicts found
        if: ${{ steps.has-conflicts.conclusion != 'success' }}
        uses: prince-chrismc/label-merge-conflicts-action@v3
        with:
          conflict_label_name: "has conflict"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          detect_merge_changes: false 
          conflict_comment: |
            :wave: Hi, ${{github.actor}},
            I detected conflicts against the base branch.
            Please resolve the conflict.

      - name: Create Cherry-pick PR
        if: ${{ startsWith(github.ref, 'refs/heads/release') && steps.has-conflicts.conclusion == 'failure' }}
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ github.event.commits[0].message }}
          assignee: ${{ github.actor }}
          label: hot-fix
          new_string: ${{ github.event.commits[0].message }}
          target_branch : 'main'
          source_branch : ${{ github.head_ref || github.ref_name }} 













  # check_conflicts:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
      
  #     - name: Check merge conflicts
  #       continue-on-error: true
  #       run : |
  #         git config --local user.email "action@github.com"
  #         git config --local user.name "GitHub Action"
  #         git pull --no-commit --no-ff origin main
  #         exit 1

  # conflicts_found_notify_user:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name : Notify to the user if conflicts found
  #       if: failure()
  #       uses: prince-chrismc/label-merge-conflicts-action@v3
  #       with:
  #         conflict_label_name: "has conflict"
  #         github_token: ${{ github.token }}
  #         detect_merge_changes: false # or true to handle as conflicts
  #         conflict_comment: |
  #           :wave: Hi, ${{github.actor}},
  #           I detected conflicts against the base branch.
  #           Please resolve the conflict.

  # create_cherry-pic_pr:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Create Cherry-pick PR
        
  #       if: startsWith(github.ref, 'refs/heads/release') && success()
  #       uses: devops-infra/action-pull-request@v0.5.5
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         title: ${{ github.event.commits[0].message }}
  #         assignee: ${{ github.actor }}
  #         label: hot-fix
  #         new_string: ${{ github.event.commits[0].message }}
  #         target_branch : 'main'
  #         source_branch : ${{ github.head_ref || github.ref_name }} 