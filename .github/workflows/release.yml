name: Create Release Branch

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version no of release'
        default: 'x.xx.x'
        required: true
    
jobs:
    
      build:
        runs-on: ubuntu-latest

        steps:

        
        - name: Checkout
          uses: actions/checkout@v2
        - name: Find Release Tag
          id: tagger
          uses: jimschubert/query-tag-action@v1
          with:
            include: '*release*'
            commit-ish: 'HEAD~'
        # - name: Show Tag
        #   id: display
        #   run: |
        #     echo 'Output from Find Tag: ${{steps.tagger.outputs.tag}}
     
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: 'Get Previous tag'
  #       id: previoustag
  #       uses: "WyriHaximus/github-action-get-previous-tag@v1"
  #       with:
  #         fallback: 1
  #     - uses: actions-ecosystem/action-get-latest-tag@v1
  #       id: get-latest-tag
      

        - name: Install dependencies
          if: always()
          run: npm i @actions/core @actions/github

        - name: Get Incremented Tag Value
          if: always()
          id: latestTag
          uses: ./
          with:
            currentTag: '${{steps.tagger.outputs.tag}}'
        
        - name: Create tag
          if: always()
          uses: actions/github-script@v5
          with:
            script: |
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/release_${{inputs.release_version}}_rc${{steps.latestTag.outputs.nextTag}}',
                sha: context.sha
              })

      # - name: Create Release Branch
      #   if: always()
      #   run: |
      #     git checkout -b release/${{inputs.release_version}}
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     sed -ie 's/version .*/version ${{inputs.release_version}}/' app.json
      #     git add .
      #     git commit -m "Automated commit by GitHub Actions to update version name" -a
      #     git push --set-upstream origin release/${{inputs.release_version}}
      #     echo "::Release branch creadted successfully"
